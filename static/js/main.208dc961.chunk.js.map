{"version":3,"sources":["serviceWorker.js","components/header.component.jsx","components/footer.component.jsx","components/news/explorer.component.jsx","components/news/newscatogary.component.jsx","components/news/news.component.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","Container","Row","className","src","placeholder","React","Component","Footer","ExplorerHeading","NewsCatogary","id","News","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wNAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2HCyBSC,E,kDArCX,aAAc,wC,qDAKV,OAAQ,gCAAQ,kBAACC,EAAA,EAAD,KACJ,kBAACC,EAAA,EAAD,CAAKC,UAAU,sBACX,yBAAKA,UAAU,gBACX,yBAAKC,IAAI,qBAEb,yBAAKD,UAAU,6DACP,yBAAKA,UAAU,eACX,yBAAKC,IAAI,oBAEb,yBAAKD,UAAU,wBACX,2BAAOE,YAAY,qBAG/B,yBAAKF,UAAU,wCACX,sCAEJ,yBAAKA,UAAU,mCACX,uCAEJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,QACX,8BACA,8BACA,uC,GA7BXG,IAAMC,WCoBZC,E,kDApBX,aAAe,wC,qDAKX,OAAO,4BAAQL,UAAU,aACrB,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,yBAAKC,UAAU,oBACX,sCAEJ,yBAAKA,UAAU,eACX,8C,GAbHG,IAAMC,WCeZE,E,kDAhBX,aAAc,wC,qDAKV,OAAO,yBAAKN,UAAU,8EAClB,yBAAKA,UAAU,WAAf,WACA,yBAAKA,UAAU,OACX,6BACI,yBAAKC,IAAI,uB,GAVCG,aCsBfG,E,kDArBX,aAAc,wC,qDAKV,OAAO,kBAACR,EAAA,EAAD,CAAKC,UAAU,YAClB,yBAAKA,UAAU,wBACX,wBAAIA,UAAU,6CAA6CQ,GAAG,SAC1D,wBAAIR,UAAU,UAAd,WACA,wCACA,wCACA,oCACA,sCACA,mCACA,oD,GAfOI,aCmBZK,E,kDAdX,aAAe,wC,qDAKX,OAAO,kBAACX,EAAA,EAAD,KACH,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,OAEJ,kBAAC,EAAD,W,GAVOK,aCcJM,E,kDAZb,aAAc,wC,qDAIZ,OAAO,kBAAC,IAAD,KACH,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GARUP,IAAMC,WCIxBO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SPwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.208dc961.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\nimport { Container, Row } from 'react-bootstrap';\r\n\r\n\r\nclass Header extends React.Component {\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    render(){\r\n        return  <header><Container> \r\n                    <Row className=\"align-items-center\">\r\n                        <div className=\"twitter-logo\">\r\n                            <img src=\"img/twitter.svg\" />\r\n                        </div>\r\n                        <div className=\"search-bar mr-auto d-flex align-items-center col col-xl-7\">\r\n                                <div className=\"search-icon\">\r\n                                    <img src=\"img/search.png\" />\r\n                                </div>\r\n                                <div className=\"search-field mr-auto\">\r\n                                    <input placeholder=\"Search Twitter\" />\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"login-button col-1 d-none d-xl-block\">\r\n                            <p>Log in</p>\r\n                        </div>\r\n                        <div className=\"sign-up col-1 d-none d-xl-block\">\r\n                            <p>Sign Up</p>\r\n                        </div>\r\n                        <div className=\"settings\">\r\n                            <div className=\"dots\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </div>\r\n                    </Row>\r\n                </Container></header>;\r\n    }\r\n} \r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\n\r\n\r\nclass Footer extends React.Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return <footer className='d-xl-none'>\r\n            <Container>\r\n                <Row>\r\n                    <div className=\"login-button col\">\r\n                        <p>Log in</p>\r\n                    </div>\r\n                    <div className=\"sign-up col\">\r\n                        <p>Sign Up</p>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nclass ExplorerHeading extends Component {\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    render(){\r\n        return <div className=\"explore-row col col-xl-8 d-flex justify-content-between align-items-center\">\r\n            <div className=\"explore\">Explore</div>\r\n            <div className=\"cog\">\r\n                <div>\r\n                    <img src=\"img/cog.png\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default ExplorerHeading","import React, { Component } from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nclass NewsCatogary extends Component {\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    render(){\r\n        return <Row className=\"catogary\">\r\n            <div className=\"wrapper col col-xl-8\">\r\n                <ul className=\"nav nav-tabs d-flex justify-content-around\" id=\"myTab\">\r\n                    <li className=\"active\">For You</li>\r\n                    <li>Covid 19</li>\r\n                    <li>Trending</li>\r\n                    <li>News</li>\r\n                    <li>Sports</li>\r\n                    <li>Fun</li>\r\n                    <li>Entertainment</li>\r\n                </ul> \r\n            </div>\r\n        </Row>\r\n    }\r\n}\r\n\r\nexport default NewsCatogary","import React, { Component } from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport ExplorerHeading from './explorer.component'\r\nimport NewsCatogary from './newscatogary.component'\r\n\r\n\r\nclass News extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n    render(){\r\n\r\n        return <Container>\r\n            <Row>\r\n                <ExplorerHeading />\r\n            </Row>\r\n            <NewsCatogary />\r\n        </Container>;\r\n    }\r\n}\r\n\r\nexport default News","import React from 'react';\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport './App.scss';\nimport Header from './components/header.component' \nimport Footer from './components/footer.component'\nimport News from './components/news/news.component'\n\nclass App extends React.Component {\n  constructor(){\n    super();\n  }\n  render(){\n    return <Router>\n        <Header></Header>\n        <News />\n        <Footer></Footer>\n    </Router>\n  }\n}\n\nexport default App;\n","import * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}